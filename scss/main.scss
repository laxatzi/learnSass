// imports
@import './_resets/';
@import './_variables.scss';

// functions
@function weight($weight-name){
    // The map module makes it possible to look up the value associated with a key in a map.
   // map-get($map, $key) function returns these value
    @return map-get($font-weights, $weight-name);
}
// mixins
 @mixin flexCenter($direction) {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: $direction;

 }

 @mixin theme($light-theme: true){
     @if $light-theme{
         background: lighten($primary-color, 100%);
         color: darken($text-color, 100%);
     }
 }

 @mixin mobile {
     @media (max-width: $mobile){
         //In addition to taking arguments, a mixin can take an entire block of styles, known as a content block.
         //  A mixin can declare that it takes a content block by including the @content at-rule in its body.
        @content; 
     }
 }
// styles
body {
    background-color: $primary-color;
    color: $text-color;
    
    font-weight: weight(regular);
}

// demonstrate nesting
.main {
    @include flexCenter(row);
    width: 80%-40%;
    margin: 0 auto;
    
    #{&}_paragraph1 {  //use of ampersand for 'main' -- with interpolation
        font-weight: weight(bold);
        
        &:hover {
            color: $accent-color;
        }
    }

    #{&}_paragraph2 {
        @extend .main_paragraph1;
        font-weight: weight(regular);
    }

   @include mobile{
        flex-direction: column;
   }

}// end main

// obsolete
// .main p {

// }

.light {
    @include theme($light-theme: true);
}